function cholesterolVals(){for(var s="",e=98,t=[],r=99;r<450;r++)e++,s=99===e?{text:"No sé",val:null}:{text:e.toString(),val:e.toString()},t.push(s);return t}function mpVals(){for(var s="",e=69,t=[],r=70;r<260;r++)e++,s={text:e.toString(),val:e.toString()},t.push(s);return t}var oms_ops_vars={results:"",nomenclature:"",cholesterol:cholesterolVals(),mp:mpVals(),risks:risks,vars:{gender:"",age:0,smoking:"",max_pressure:0,diabete:"",total_cholesterol:null},true_false:[{text:"Sí",val:!0},{text:"No",val:!1}],normalize(){this.vars.gender=this.vars.gender,this.vars.max_pressure=this.vars.max_pressure,this.vars.total_cholesterol=this.vars.total_cholesterol,this.vars.age=this.vars.age,this.vars.diabete=this.strToBool(this.vars.diabete),this.vars.smoking=this.strToBool(this.vars.smoking)},strToBool:s=>(regex=/^\s*(true|1|on)\s*$/i,regex.test(s)),calc(){var s=this.vars.gender,e=parseInt(this.vars.age),t=this.vars.smoking,r=this.vars.diabete,a=parseInt(this.vars.total_cholesterol),o=parseInt(this.vars.max_pressure),l=this.generateSearchKey(e,a,o,t,s,r);l=l.replace(/^0+(?!\.|$)/,"");var i="";switch(i=null==a?this.getRiskNoCholesterol(l):this.getRiskCholesterol(l),i){case 1:this.results="< 10%";break;case 2:this.results="10% - 20%";break;case 3:this.results="21% - 29%";break;case 4:this.results="30% - 39%";break;case 5:this.results="> 40%"}},generateSearchKey(s,e,t,r,a,o){var l="";return l+=1==o?"1":"0",l+="M"==a?"1":"0",l+=1==r?"1":"0",l+=s<50?"1":s<60?"2":s<70?"3":"4",l+=t<131?"1":t<151?"2":t<171?"3":"4",null!=e&&(l+=e<175?"1":e<213?"2":e<251?"3":e<291?"4":"5"),l},getRiskNoCholesterol(s){var e=this.risks;return console.log(e.no_cholesterol[s]),e.no_cholesterol[s]},getRiskCholesterol(s){var e=this.risks;return console.log(e.cholesterol[s]),e.cholesterol[s]}};